{
  "Properties": [
    {
      "Id": "Connection string",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Settings.DatabaseConnection",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Connection type",
      "Type": "Compiled:Twenty57.Linx.Plugins.Database.Shared.Common.Sql.DesignerConnectionType, Twenty57.Linx.Plugins.Database.Shared, Version=3.0.5.0, Culture=neutral, PublicKeyToken=null",
      "ValueUsage": "DesignTime",
      "Value": "SqlServer"
    },
    {
      "Id": "Expression0",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.AccessToken",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Expression1",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.RefreshToken",
        "CompiledExpression": "={0}",
        "Type": "Compiled:String"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Expression2",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.AccessTokenRetrievedAt",
        "CompiledExpression": "={0}",
        "Type": "Compiled:DateTime"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Expression3",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.AccessTokenExpiresInSeconds",
        "CompiledExpression": "={0}",
        "Type": "Compiled:Int64"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Expression4",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.RefreshTokenExpiresInSeconds",
        "CompiledExpression": "={0}",
        "Type": "Compiled:Int64"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Expression5",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.LastUpdatedAt",
        "CompiledExpression": "={0}",
        "Type": "Compiled:DateTime"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Expression6",
      "Type": "Compiled:Object",
      "ValueUsage": "RuntimeRead",
      "Value": {
        "Expression": "$.Parameters.QuickBooksRecord.ClientId",
        "CompiledExpression": "={0}",
        "Type": "Compiled:Int64"
      },
      "ValueType": "Linx.CSharpExpression"
    },
    {
      "Id": "Result type",
      "Type": "Compiled:Twenty57.Linx.Plugins.Database.Shared.ExecuteSQL.ResultType, Twenty57.Linx.Plugins.Database.Shared, Version=3.0.5.0, Culture=neutral, PublicKeyToken=null",
      "ValueUsage": "DesignTime",
      "Value": {
        "CustomType": null,
        "Fields": [],
        "IsCustomType": false
      }
    },
    {
      "Id": "SQL",
      "Type": "Compiled:String",
      "ValueUsage": "RuntimeRead",
      "Value": "UPDATE QuickBooksTokens\r\nSET \r\n    AccessToken = @{$.Parameters.QuickBooksRecord.AccessToken},\r\n    RefreshToken = @{$.Parameters.QuickBooksRecord.RefreshToken},\r\n    AccessTokenRetrievedAt = @{$.Parameters.QuickBooksRecord.AccessTokenRetrievedAt},\r\n    AccessTokenExpiresInSeconds = @{$.Parameters.QuickBooksRecord.AccessTokenExpiresInSeconds},       \r\n    RefreshTokenExpiresInSeconds = @{$.Parameters.QuickBooksRecord.RefreshTokenExpiresInSeconds},   \r\n    LastUpdatedAt =@{$.Parameters.QuickBooksRecord.LastUpdatedAt}\r\nWHERE ClientId = @{$.Parameters.QuickBooksRecord.ClientId};  "
    },
    {
      "Id": "Timeout",
      "Type": "Compiled:Int32",
      "ValueUsage": "DesignTime",
      "Value": 60
    }
  ],
  "Version": "3"
}